# Start a section with the latest released node,
# downloaded from S3, and run the SCL tests (cargo test --release) on it.

name: Latest Released Node Network Tests

on:
  schedule:
    - cron: '0 1 * * *'

env:
  # Run all cargo commands with --verbose.
  CARGO_TERM_VERBOSE: true
  RUST_BACKTRACE: 1
  # Deny all compiler warnings.
  RUSTFLAGS: "-D warnings"
  # set the node, cli and authd version to be downloaded and used, and the time before tests should start
  SN_CLI_VERSION: "latest"
  SN_NODE_VERSION: "latest"
  SN_AUTHD_VERSION: "latest"
  TEST_STARTUP_INTERVAL: "40"

jobs:
  network-test:
    name: E2E against real network
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Download shared script for starting a section and make it executable
      - name: Download start-local-section.sh
        run: |
          wget "https://raw.githubusercontent.com/maidsafe/QA/master/misc-scripts/start-local-section.sh"
          chmod +x start-local-section.sh
            
      # Run start-local-section.sh script to start a local section
      - name: Run start-local-section.sh
        run: ./start-local-section.sh ${{env.SN_NODE_VERSION}} ${{env.SN_CLI_VERSION}} ${{env.SN_AUTHD_VERSION}} ${{env.TEST_STARTUP_INTERVAL}}

      # Confirm nodes are running on this VM
      - name: Check if nodes are running
        run: pgrep -a sn_node
            
      # Print connection info
      - name: Print connection info
        run: cat ~/.safe/node/node_connection_info.config
      
      # Cache.
      - name: Cargo cache registry, index and build
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-cache-${{ hashFiles('**/Cargo.lock') }}

      # Run tests.
      - name: Run the tests
        run: cargo test --release --features=simulated-payouts

      - name: Stop the network.
        if: failure()
        run: safe node killall || true && safe auth stop || true

      - name: Failure logs.
        if: failure()
        run: cat ~/.safe/node/baby-fleming-nodes/*/*.log
